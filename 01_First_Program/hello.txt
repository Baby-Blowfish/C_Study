구현체에 정의된 동작:
이 동작은 C나 C++ 표준에 의해 강제되지 않지만, 특정 컴파일러나 시스템의 구현체에서 정의된 동작입니다. 즉, 같은 코드를 다른 컴파일러나 플랫폼에서 실행하면 결과가 달라질 수 있습니다. 이는 코드의 이식성을 떨어뜨리는 주요 요인이 될 수 있습니다.

미지정 동작 (Unspecified Behavior):
여러 가지 동작이 가능한 상황에서 표준이 특정한 결과를 지정하지 않고, 구현체에 따라 다르게 동작하도록 한 것을 말합니다. 예를 들어 함수 인자의 평가 순서가 미지정되어 있으면, 구현체마다 다르게 평가될 수 있습니다.

미정의 동작 (Undefined Behavior):
프로그램이 표준에 의해 규정되지 않은 방식으로 동작할 때 발생합니다. 예를 들어, 배열의 경계를 벗어난 접근이나 0으로 나누는 등의 행동은 미정의 동작을 유발할 수 있습니다. 이 경우, 프로그램이 충돌하거나 예상치 못한 결과를 생성할 수 있어 이식성이 크게 저하됩니다.

로케일별 동작:
프로그램이 실행되는 환경의 로케일(지역 설정)에 따라 다른 결과를 생성하는 동작입니다. 예를 들어, 문자열의 정렬 순서나 날짜 형식 등이 로케일에 따라 다를 수 있으며, 이는 프로그램의 이식성을 제한할 수 있는 요소가 됩니다.

공통 확장:
많은 컴파일러나 시스템에서 제공하는 비표준 확장 기능을 의미합니다. 이러한 확장은 편리하게 사용할 수 있지만, 표준을 따르지 않기 때문에 다른 시스템에서 해당 기능이 동작하지 않을 수 있습니다. 이는 코드의 호환성과 이식성을 저해할 수 있습니다.

